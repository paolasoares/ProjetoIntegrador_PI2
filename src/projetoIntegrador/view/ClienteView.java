/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package projetoIntegrador.view;

import java.awt.Color;
import java.awt.event.KeyEvent;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.DefaultFormatterFactory;
import javax.swing.text.MaskFormatter;
import projetoIntegrador.controller.ClienteController;

/**
 * classe que representa a tela de cadastro cliente
 *
 * @author Paola
 */
public class ClienteView extends javax.swing.JInternalFrame {

    /**
     *
     * Creates new form ClientesView1
     */
    private final ClienteController clienteController = new ClienteController();
    private String modoTela = "Criar";

    public ClienteView() {
        initComponents();
        carregarTabela();
        desabilitarFormulario();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        TipoBuscaCliente = new javax.swing.ButtonGroup();
        jPanel9 = new javax.swing.JPanel();
        jPanel10 = new javax.swing.JPanel();
        CadastroCliente4 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        txtNomeCliente = new javax.swing.JTextField();
        lblNomeCliente = new javax.swing.JLabel();
        lblCPFCliente = new javax.swing.JLabel();
        lblDataNascimento = new javax.swing.JLabel();
        txtEmailCliente = new javax.swing.JTextField();
        lblEmailCliente = new javax.swing.JLabel();
        lblBairro = new javax.swing.JLabel();
        txtBairro = new javax.swing.JTextField();
        txtRua = new javax.swing.JTextField();
        lblEndereco = new javax.swing.JLabel();
        Sexo = new javax.swing.JPanel();
        lblSexo = new javax.swing.JLabel();
        cmbSexo = new javax.swing.JComboBox<>();
        lblEstadoCivil = new javax.swing.JLabel();
        cmbEstadoCivil = new javax.swing.JComboBox<>();
        lblNumero = new javax.swing.JLabel();
        txtCidade = new javax.swing.JTextField();
        lblCidade = new javax.swing.JLabel();
        lbltelefone1 = new javax.swing.JLabel();
        lblTelefone2 = new javax.swing.JLabel();
        lblCEP = new javax.swing.JLabel();
        lblNacionalidade = new javax.swing.JLabel();
        txtNacionalidade = new javax.swing.JTextField();
        txtCPFCliente = new javax.swing.JFormattedTextField();
        txtTelefone1 = new javax.swing.JFormattedTextField();
        txtTelefone2 = new javax.swing.JFormattedTextField();
        txtCEP = new javax.swing.JFormattedTextField();
        txtNumero = new javax.swing.JTextField();
        dateNascimento = new com.toedter.calendar.JDateChooser();
        jLabel1 = new javax.swing.JLabel();
        Botoes = new javax.swing.JPanel();
        btnSalvarCliente = new javax.swing.JButton();
        btnExcluirCliente = new javax.swing.JButton();
        btnEditarCliente = new javax.swing.JButton();
        btnBuscarCliente = new javax.swing.JButton();
        btnAdicionarCliente = new javax.swing.JButton();
        txtBusca = new javax.swing.JFormattedTextField();
        BuscarNome = new javax.swing.JRadioButton();
        BuscarCPF = new javax.swing.JRadioButton();
        btnCancelar = new javax.swing.JButton();
        Tabela = new javax.swing.JScrollPane();
        tblCadastroCliente = new javax.swing.JTable();
        lblClienteID = new javax.swing.JLabel();

        jPanel9.setBackground(javax.swing.UIManager.getDefaults().getColor("Button.light"));

        jPanel10.setBackground(new java.awt.Color(189, 125, 82));

        CadastroCliente4.setFont(new java.awt.Font("Georgia", 1, 18)); // NOI18N
        CadastroCliente4.setForeground(new java.awt.Color(255, 255, 255));
        CadastroCliente4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        CadastroCliente4.setText("Cadastro Cliente");

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(CadastroCliente4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(CadastroCliente4, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel1.setBackground(javax.swing.UIManager.getDefaults().getColor("Button.light"));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(189, 125, 82)));

        txtNomeCliente.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        txtNomeCliente.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        txtNomeCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNomeClienteActionPerformed(evt);
            }
        });

        lblNomeCliente.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        lblNomeCliente.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblNomeCliente.setText("Nome:*");

        lblCPFCliente.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        lblCPFCliente.setText("Cpf:*");

        lblDataNascimento.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        lblDataNascimento.setText("Data de nascimento:*");

        txtEmailCliente.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        txtEmailCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEmailClienteActionPerformed(evt);
            }
        });

        lblEmailCliente.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        lblEmailCliente.setText("Email:*");

        lblBairro.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        lblBairro.setText("Bairro:");

        txtBairro.setHorizontalAlignment(javax.swing.JTextField.LEFT);

        txtRua.setHorizontalAlignment(javax.swing.JTextField.LEFT);

        lblEndereco.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        lblEndereco.setText("Rua:*");

        Sexo.setBackground(new java.awt.Color(255, 255, 255));
        Sexo.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        Sexo.setForeground(new java.awt.Color(204, 204, 204));
        Sexo.setToolTipText("");
        Sexo.setName(""); // NOI18N
        Sexo.setOpaque(false);

        lblSexo.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        lblSexo.setText("Sexo:");

        cmbSexo.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        cmbSexo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Feminino", "Masculino", "Indefinido", " ", " " }));

        lblEstadoCivil.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        lblEstadoCivil.setText("Estado Civil:");

        cmbEstadoCivil.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        cmbEstadoCivil.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Solteiro", "Casado", "Divorciado", "", "" }));
        cmbEstadoCivil.setLightWeightPopupEnabled(false);
        cmbEstadoCivil.setOpaque(false);

        javax.swing.GroupLayout SexoLayout = new javax.swing.GroupLayout(Sexo);
        Sexo.setLayout(SexoLayout);
        SexoLayout.setHorizontalGroup(
            SexoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SexoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblSexo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cmbSexo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 180, Short.MAX_VALUE)
                .addComponent(lblEstadoCivil)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cmbEstadoCivil, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        SexoLayout.setVerticalGroup(
            SexoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SexoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(SexoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(SexoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblEstadoCivil, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(cmbEstadoCivil, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(SexoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblSexo, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(cmbSexo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        lblNumero.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        lblNumero.setText("Número:*");

        txtCidade.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        txtCidade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCidadeActionPerformed(evt);
            }
        });

        lblCidade.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        lblCidade.setText("Cidade:*");

        lbltelefone1.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        lbltelefone1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lbltelefone1.setText("Telefone 1:*");

        lblTelefone2.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        lblTelefone2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblTelefone2.setText("Telefone 2:");

        lblCEP.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        lblCEP.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblCEP.setText("CEP:*");

        lblNacionalidade.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        lblNacionalidade.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblNacionalidade.setText("Nacionalidade:*");

        txtNacionalidade.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        txtNacionalidade.setHorizontalAlignment(javax.swing.JTextField.LEFT);

        try {
            txtCPFCliente.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###.###.###-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtCPFCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCPFClienteActionPerformed(evt);
            }
        });

        try {
            txtTelefone1.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("(##) #####-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        try {
            txtTelefone2.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("(##) #####-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        try {
            txtCEP.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("#####-###")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtCEP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCEPActionPerformed(evt);
            }
        });

        txtNumero.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtNumeroKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNumeroKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txtRua)
                                .addComponent(lblBairro)
                                .addComponent(txtBairro, javax.swing.GroupLayout.PREFERRED_SIZE, 333, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(lblEndereco, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(lblNumero)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(lblCidade)
                                        .addGap(0, 143, Short.MAX_VALUE))
                                    .addComponent(txtCidade)
                                    .addComponent(txtNumero, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addContainerGap())))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblNomeCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtNomeCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 102, Short.MAX_VALUE)
                                        .addComponent(lblCPFCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(135, 135, 135))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(78, 78, 78)
                                        .addComponent(txtCPFCliente))))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(lblDataNascimento)
                                    .addComponent(dateNascimento, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(78, 78, 78)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtEmailCliente)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(lblEmailCliente)
                                        .addGap(0, 0, Short.MAX_VALUE))))
                            .addComponent(Sexo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(lblCEP, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lbltelefone1, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtTelefone1, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                                    .addComponent(txtCEP))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(lblTelefone2, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtNacionalidade, javax.swing.GroupLayout.DEFAULT_SIZE, 220, Short.MAX_VALUE)
                                    .addComponent(lblNacionalidade)
                                    .addComponent(txtTelefone2))))
                        .addContainerGap())))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {dateNascimento, txtNomeCliente});

        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNomeCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblCPFCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtNomeCliente, javax.swing.GroupLayout.DEFAULT_SIZE, 27, Short.MAX_VALUE)
                    .addComponent(txtCPFCliente))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(lblDataNascimento, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(dateNascimento, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(lblEmailCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtEmailCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Sexo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblEndereco, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblNumero, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtRua, javax.swing.GroupLayout.DEFAULT_SIZE, 27, Short.MAX_VALUE)
                    .addComponent(txtNumero))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(lblCidade, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtCidade, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(lblBairro, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtBairro, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 15, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(lblNacionalidade, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtNacionalidade, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(4, 4, 4)
                        .addComponent(lblTelefone2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtTelefone2, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(lblCEP, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtCEP, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lbltelefone1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtTelefone1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(13, 13, 13))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {dateNascimento, txtNomeCliente});

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/projetoIntegrador/view/img/Icone.Usuario.png"))); // NOI18N

        Botoes.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        Botoes.setForeground(new java.awt.Color(204, 204, 204));

        btnSalvarCliente.setBackground(new java.awt.Color(189, 125, 82));
        btnSalvarCliente.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        btnSalvarCliente.setText("Salvar");
        btnSalvarCliente.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(189, 125, 82)));
        btnSalvarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarClienteActionPerformed(evt);
            }
        });

        btnExcluirCliente.setBackground(new java.awt.Color(189, 125, 82));
        btnExcluirCliente.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        btnExcluirCliente.setText("Excluir");
        btnExcluirCliente.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(189, 125, 82)));
        btnExcluirCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirClienteActionPerformed(evt);
            }
        });

        btnEditarCliente.setBackground(new java.awt.Color(189, 125, 82));
        btnEditarCliente.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        btnEditarCliente.setText("Editar");
        btnEditarCliente.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(189, 125, 82)));
        btnEditarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarClienteActionPerformed(evt);
            }
        });

        btnBuscarCliente.setBackground(new java.awt.Color(189, 125, 82));
        btnBuscarCliente.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        btnBuscarCliente.setText("Buscar");
        btnBuscarCliente.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(189, 125, 82)));
        btnBuscarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarClienteActionPerformed(evt);
            }
        });

        btnAdicionarCliente.setBackground(new java.awt.Color(189, 125, 82));
        btnAdicionarCliente.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        btnAdicionarCliente.setText("Adicionar");
        btnAdicionarCliente.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(189, 125, 82)));
        btnAdicionarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdicionarClienteActionPerformed(evt);
            }
        });

        txtBusca.setText("Buscar...");
        txtBusca.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtBuscaFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtBuscaFocusLost(evt);
            }
        });
        txtBusca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBuscaActionPerformed(evt);
            }
        });

        TipoBuscaCliente.add(BuscarNome);
        BuscarNome.setSelected(true);
        BuscarNome.setText("NOME");
        BuscarNome.setActionCommand("BuscarNome");
        BuscarNome.setBorder(null);
        BuscarNome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BuscarNomeActionPerformed(evt);
            }
        });

        TipoBuscaCliente.add(BuscarCPF);
        BuscarCPF.setText("CPF");
        BuscarCPF.setActionCommand("BuscarCPF");
        BuscarCPF.setBorder(null);
        BuscarCPF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BuscarCPFActionPerformed(evt);
            }
        });

        btnCancelar.setBackground(new java.awt.Color(189, 125, 82));
        btnCancelar.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        btnCancelar.setText("Cancelar");
        btnCancelar.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(189, 125, 82)));
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout BotoesLayout = new javax.swing.GroupLayout(Botoes);
        Botoes.setLayout(BotoesLayout);
        BotoesLayout.setHorizontalGroup(
            BotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BotoesLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(btnSalvarCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnAdicionarCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(4, 4, 4)
                .addComponent(btnEditarCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnExcluirCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 51, Short.MAX_VALUE)
                .addComponent(BuscarCPF)
                .addGap(18, 18, 18)
                .addComponent(BuscarNome, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtBusca, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnBuscarCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37))
        );
        BotoesLayout.setVerticalGroup(
            BotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BotoesLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(BotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(BotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnBuscarCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtBusca, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(BuscarCPF)
                        .addComponent(BuscarNome, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(BotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnAdicionarCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnEditarCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnExcluirCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnSalvarCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tblCadastroCliente.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        tblCadastroCliente.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nome:", "CPF:", "Data de cadastro:"
            }
        ));
        Tabela.setViewportView(tblCadastroCliente);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(66, 66, 66)
                        .addComponent(lblClienteID)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(Tabela, javax.swing.GroupLayout.PREFERRED_SIZE, 496, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 33, Short.MAX_VALUE))
            .addComponent(jPanel9, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Botoes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(76, 76, 76)
                        .addComponent(lblClienteID))
                    .addComponent(Tabela))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 24, Short.MAX_VALUE)
                .addComponent(Botoes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * carrega a tabela de clientes, seja ao adicionar, excluir, atualizar
     * cliente ou ao busca um cliente
     */
    public void carregarTabela() {

        String procurar = txtBusca.getText();
        //Controlador resgata os clientes do banco de dados
        ArrayList<String[]> listaClientes = clienteController.consultarClientes();
        if (txtBusca.getText().equals("Buscar...")) {
            procurar = "";
        }
        ArrayList<String[]> BuscarClientes = clienteController.buscarClientes(procurar, modoTela);

        //criar manualmente uma tabela para listar os clientes e gerencia-los
        DefaultTableModel tabelaClientes = new DefaultTableModel() {
            @Override
            public boolean isCellEditable(int linha, int coluna) {
                return false;
            }
        };
        tabelaClientes.addColumn("ID");//0
        tabelaClientes.addColumn("NOME");//1
        tabelaClientes.addColumn("CPF");//2
        tabelaClientes.addColumn("SEXO");//3
        tabelaClientes.addColumn("DATA DE NASCIMENTO");//4
        tabelaClientes.addColumn("ESTADO CIVIL");//5
        tabelaClientes.addColumn("ENDERECO");//6
        tabelaClientes.addColumn("BAIRRO");//7
        tabelaClientes.addColumn("CEP");//8
        tabelaClientes.addColumn("NUMERO");//9
        tabelaClientes.addColumn("CIDADE");//10
        tabelaClientes.addColumn("NACIONALIDADE");//11
        tabelaClientes.addColumn("EMAIL");//12
        tabelaClientes.addColumn("TELEFONE");//13
        tabelaClientes.addColumn("TELEFONE");//14
        tabelaClientes.addColumn("DATA DE CADASTRO");//15
        tabelaClientes.addColumn("ULTIMA ATUALIZAÇÃO");//16
        tabelaClientes.isCellEditable(0, 0);
        tblCadastroCliente.setModel(tabelaClientes);

        //remover algumas colunas da tabela, mas mantendo as informções na model para quando precisar passar para o formulario
        for (int i = tabelaClientes.getColumnCount() - 1; i >= 0; i--) {
            if (i != 15 && i != 2 && i != 1) {
                tblCadastroCliente.removeColumn(tblCadastroCliente.getColumnModel().getColumn(i));
            }
        }

        //para cada cliente novo, atualizado ou excluido, atualizo a tabela
        if (modoTela.contains("Buscar")) {
            BuscarClientes.forEach((clientes) -> {
                tabelaClientes.addRow(clientes);
            });
        } else {
            listaClientes.forEach((clientes) -> {
                tabelaClientes.addRow(clientes);
            });
            //definindo um tamanho para cada coluna
            tblCadastroCliente.getColumnModel().getColumn(0).setPreferredWidth(200);
            tblCadastroCliente.getColumnModel().getColumn(1).setPreferredWidth(200);
            tblCadastroCliente.getColumnModel().getColumn(2).setPreferredWidth(200);

        }

    }

    /**
     * limpa o formulario usado para cadastrar cliente
     */
    public void limparFormulario() {
        txtNomeCliente.setText("");
        txtCPFCliente.setText("");
        dateNascimento.setDate(null);
        txtEmailCliente.setText("");
        cmbSexo.setSelectedIndex(0);
        cmbEstadoCivil.setSelectedIndex(0);
        txtRua.setText("");
        txtBairro.setText("");
        txtCidade.setText("");
        txtCEP.setText("");
        txtNacionalidade.setText("");
        txtNumero.setText("");
        txtTelefone1.setText("");
        txtTelefone2.setText("");
    }

    /**
     * habilita o formulario de cadastro cliente
     */
    public void habilitarFormulario() {
        txtNomeCliente.setEnabled(true);
        txtCPFCliente.setEnabled(true);
        dateNascimento.setEnabled(true);
        txtEmailCliente.setEnabled(true);
        cmbSexo.setEnabled(true);
        cmbEstadoCivil.setEnabled(true);
        txtRua.setEnabled(true);
        txtBairro.setEnabled(true);
        txtCidade.setEnabled(true);
        txtCEP.setEnabled(true);
        txtNacionalidade.setEnabled(true);
        txtNumero.setEnabled(true);
        txtTelefone1.setEnabled(true);
        txtTelefone2.setEnabled(true);
        btnSalvarCliente.setEnabled(true);
        btnCancelar.setEnabled(true);
    }

    /**
     * Desabilita o formulario de casdatro cliente
     */
    public void desabilitarFormulario() {
        txtNomeCliente.setEnabled(false);
        txtCPFCliente.setEnabled(false);
        dateNascimento.setEnabled(false);
        txtEmailCliente.setEnabled(false);
        cmbSexo.setEnabled(false);
        cmbEstadoCivil.setEnabled(false);
        txtRua.setEnabled(false);
        txtBairro.setEnabled(false);
        txtCidade.setEnabled(false);
        txtCEP.setEnabled(false);
        txtNacionalidade.setEnabled(false);
        txtNumero.setEnabled(false);
        txtTelefone1.setEnabled(false);
        txtTelefone2.setEnabled(false);
        lblClienteID.setVisible(false);
        btnSalvarCliente.setEnabled(false);
        btnCancelar.setEnabled(false);
    }

    /**
     * seta todo os campos do formulario cliente em brancos
     */
    public void camposBrancos() {
        txtNomeCliente.setBackground(Color.white);
        txtCPFCliente.setBackground(Color.white);
        dateNascimento.setBackground(getForeground());
        txtEmailCliente.setBackground(Color.white);
        txtRua.setBackground(Color.white);
        txtNumero.setBackground(Color.white);
        txtCidade.setBackground(Color.white);
        txtCEP.setBackground(Color.white);
        txtNacionalidade.setBackground(Color.white);
        txtTelefone1.setBackground(Color.white);
    }

    /**
     * Validar CPF duplicado ignora o cpf do cliente que está sendo editado
     *
     * @param id recebe o id do cliente que está sendo editado
     * @return retorna true se se o cpf ainda não está cadastrado no sistema e
     * false se o cpf ja está cadastrado no sistema
     */
    public boolean validadarCPFDupli(String id) {
        ArrayList<String[]> BuscarClientes = clienteController.consultarClientes();
        for (String[] clientes : BuscarClientes) {
            if (clientes[2].equals(txtCPFCliente.getText()) && !clientes[0].equals(id)) {
                JOptionPane.showMessageDialog(this, "o CPF já está cadastrado no sistema");
                txtCPFCliente.setBackground(Color.red);
                return false;
            }
        }
        txtCPFCliente.setBackground(Color.white);
        return true;
    }

    /**
     * Validar campos obrigatórios em brancos
     *
     * @return false caso tenha campos obrigatórios em brancos e true se os
     * campos obrigatórios estiver preenchido
     */
    public boolean validarCampoBranco() {
        String campos = "Campos obrigatórios * em brancos\n";
        if (txtNomeCliente.getText().equals("")) {
            txtNomeCliente.setBackground(Color.RED);
            campos += "Nome\n";
        } else {
            txtNomeCliente.setBackground(Color.white);
        }
        if (txtCPFCliente.getText().replace(".", "").replace("-", "").replace(" ", "").equals("")) {
            txtCPFCliente.setBackground(Color.RED);
            campos += "CPF\n";

        } else {
            txtCPFCliente.setBackground(Color.white);
        }
        if (dateNascimento.getDate() == null) {
            campos += "Data\n";
            dateNascimento.setBackground(Color.RED);
        } else {
            dateNascimento.setBackground(getForeground());
        }

        if (txtEmailCliente.getText().equals("")) {
            txtEmailCliente.setBackground(Color.red);
            campos += "Email\n";
        } else {
            txtEmailCliente.setBackground(Color.white);
        }
        if (txtRua.getText().equals("")) {
            txtRua.setBackground(Color.RED);
            campos += "Rua\n";
        } else {
            txtRua.setBackground(Color.white);
        }

        if (txtNumero.getText().equals("")) {
            txtNumero.setBackground(Color.RED);
            campos += "Numero\n";
        } else {
            txtNumero.setBackground(Color.white);
        }
        if (txtCidade.getText().equals("")) {
            txtCidade.setBackground(Color.RED);
            campos += "Cidade\n";
        } else {
            txtCidade.setBackground(Color.white);
        }

        if (txtCEP.getText().replace("-", "").replace(" ", "").equals("")) {
            txtCEP.setBackground(Color.RED);
            campos += "CEP\n";
        } else {
            txtCEP.setBackground(Color.white);
        }
        if (txtNacionalidade.getText().equals("")) {
            txtNacionalidade.setBackground(Color.RED);
            campos += "Nacionalidade\n";
        } else {
            txtNacionalidade.setBackground(Color.white);
        }

        if (txtTelefone1.getText().replace("(", "").replace(")", "").replace("-", "").replace(" ", "").equals("")) {
            txtTelefone1.setBackground(Color.RED);
            campos += "Telefone 1";
        } else {
            txtTelefone1.setBackground(Color.white);
        }
        if (!campos.equals("Campos obrigatórios * em brancos\n")) {
            JOptionPane.showMessageDialog(this, campos);
            return false;
        }
        return true;

    }

    private void btnEditarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarClienteActionPerformed
        modoTela = "Editar";
        SimpleDateFormat formato = new SimpleDateFormat("dd/MM/yyyy");
        if (tblCadastroCliente.getRowCount() > 0) {
            //verifica se o usuario selecionou uma linha, selecionado é = a 0, quando não tem nada selecionado é = -1
            if (tblCadastroCliente.getSelectedRow() >= 0) {
                habilitarFormulario();
                //passando o valores da linha selecionada
                lblClienteID.setText(tblCadastroCliente.getModel().getValueAt(tblCadastroCliente.getSelectedRow(), 0).toString());
                txtNomeCliente.setText(tblCadastroCliente.getModel().getValueAt(tblCadastroCliente.getSelectedRow(), 1).toString());
                txtCPFCliente.setText(tblCadastroCliente.getModel().getValueAt(tblCadastroCliente.getSelectedRow(), 2).toString());
                String sexoIndice = tblCadastroCliente.getModel().getValueAt(tblCadastroCliente.getSelectedRow(), 3).toString();
                cmbSexo.setSelectedIndex(Integer.parseInt(sexoIndice));
                try {
                    dateNascimento.setDate(formato.parse(tblCadastroCliente.getModel().getValueAt(tblCadastroCliente.getSelectedRow(), 4).toString()));
                } catch (ParseException ex) {
                    Logger.getLogger(ClienteView.class.getName()).log(Level.SEVERE, null, ex);
                }
                String estadoCivilIndice = tblCadastroCliente.getModel().getValueAt(tblCadastroCliente.getSelectedRow(), 5).toString();
                cmbEstadoCivil.setSelectedIndex(Integer.parseInt(estadoCivilIndice));
                txtRua.setText(tblCadastroCliente.getModel().getValueAt(tblCadastroCliente.getSelectedRow(), 6).toString());
                txtBairro.setText(tblCadastroCliente.getModel().getValueAt(tblCadastroCliente.getSelectedRow(), 7).toString());
                txtCEP.setText(tblCadastroCliente.getModel().getValueAt(tblCadastroCliente.getSelectedRow(), 8).toString());
                txtNumero.setText(tblCadastroCliente.getModel().getValueAt(tblCadastroCliente.getSelectedRow(), 9).toString());
                txtCidade.setText(tblCadastroCliente.getModel().getValueAt(tblCadastroCliente.getSelectedRow(), 10).toString());
                txtNacionalidade.setText(tblCadastroCliente.getModel().getValueAt(tblCadastroCliente.getSelectedRow(), 11).toString());
                txtEmailCliente.setText(tblCadastroCliente.getModel().getValueAt(tblCadastroCliente.getSelectedRow(), 12).toString());
                txtTelefone1.setText(tblCadastroCliente.getModel().getValueAt(tblCadastroCliente.getSelectedRow(), 13).toString());
                txtTelefone2.setText(tblCadastroCliente.getModel().getValueAt(tblCadastroCliente.getSelectedRow(), 14).toString());

            } else {
                JOptionPane.showMessageDialog(this, "Selecione um cliente para editar!");
            }
        } else {
            JOptionPane.showMessageDialog(this, "Não há cliente cadastrado!");
        }
    }//GEN-LAST:event_btnEditarClienteActionPerformed

    private void btnExcluirClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirClienteActionPerformed
        if (tblCadastroCliente.getSelectedRowCount() > 0) {
            //verifica se tem alguma linha selecionada
            if (tblCadastroCliente.getSelectedRow() >= 0) {
                //resgata o numero de linha pelo jTable
                int numeroLinha = tblCadastroCliente.getSelectedRow();
                //resgata o id (oculto) pelo JtableModel
                int IDCliente = Integer.parseInt(tblCadastroCliente.getModel().getValueAt(numeroLinha, 0).toString());
                //Verifica se foi possivel escluir o cliente e informa para o usuario se foi possivel ou não
                if (clienteController.excluirCliente(IDCliente)) {
                    JOptionPane.showMessageDialog(this, "Cliente excluido com sucesso");
                    carregarTabela();
                } else {
                    JOptionPane.showMessageDialog(this, "Não foi possível excluir o cliente!");
                }
            } else {
                JOptionPane.showMessageDialog(this, "Selecione um cliente para excluir!");
            }
        } else {
            JOptionPane.showMessageDialog(this, "Não há cliente para excluir");
        }
    }//GEN-LAST:event_btnExcluirClienteActionPerformed

    private void btnSalvarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarClienteActionPerformed
        if (validarCampoBranco()) {
            if (validadarCPFDupli(lblClienteID.getText())) {
                Date date = new Date(System.currentTimeMillis());
                if (modoTela.equals("Criar")) {
                    if (clienteController.salvarCliente(txtCPFCliente.getText(), txtNomeCliente.getText(), cmbSexo.getSelectedIndex(), dateNascimento.getDate(), cmbEstadoCivil.getSelectedIndex(), txtRua.getText(), txtBairro.getText(), txtCEP.getText(), txtNumero.getText(), txtCidade.getText(), txtNacionalidade.getText(), txtEmailCliente.getText(), txtTelefone1.getText(), txtTelefone2.getText(), date, date)) {

                        //carregar a tabela depois de salvo no banco
                        carregarTabela();
                        limparFormulario();
                        JOptionPane.showMessageDialog(this, "Novo cliente adicionado com  sucesso");
                    } else {
                        JOptionPane.showMessageDialog(this, "Erro ao salvar o cliente ");
                    }

                } else {
                    if (clienteController.atualizarCliente(Integer.parseInt(lblClienteID.getText()), txtCPFCliente.getText(), txtNomeCliente.getText(), cmbSexo.getSelectedIndex(), dateNascimento.getDate(), cmbEstadoCivil.getSelectedIndex(), txtRua.getText(), txtBairro.getText(), txtCEP.getText(), txtNumero.getText(), txtCidade.getText(), txtNacionalidade.getText(), txtEmailCliente.getText(), txtTelefone1.getText(), txtTelefone2.getText(), date)) {
                        carregarTabela();
                        limparFormulario();
                        desabilitarFormulario();
                        JOptionPane.showMessageDialog(this, "O cliente foi atualizado com sucesso");
                    } else {
                        JOptionPane.showMessageDialog(this, "Não foi possivel atualizar o cliente!");
                    }

                }
            }
        }
    }//GEN-LAST:event_btnSalvarClienteActionPerformed

    private void btnAdicionarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdicionarClienteActionPerformed
        modoTela = "Criar";
        limparFormulario();
        habilitarFormulario();
    }//GEN-LAST:event_btnAdicionarClienteActionPerformed

    private void txtNomeClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNomeClienteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNomeClienteActionPerformed

    private void txtEmailClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEmailClienteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEmailClienteActionPerformed

    private void btnBuscarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarClienteActionPerformed
        modoTela = TipoBuscaCliente.getSelection().getActionCommand();
        carregarTabela();

    }//GEN-LAST:event_btnBuscarClienteActionPerformed

    private void BuscarNomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BuscarNomeActionPerformed
        txtBusca.setFormatterFactory(new DefaultFormatterFactory());
        txtBusca.setText("Buscar...");
    }//GEN-LAST:event_BuscarNomeActionPerformed

    private void BuscarCPFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BuscarCPFActionPerformed
        txtBusca.setFormatterFactory(new DefaultFormatterFactory());
        txtBusca.setText("Buscar...");
    }//GEN-LAST:event_BuscarCPFActionPerformed

    private void txtCidadeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCidadeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCidadeActionPerformed

    private void txtCEPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCEPActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCEPActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        limparFormulario();
        desabilitarFormulario();
        camposBrancos();
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void txtBuscaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBuscaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBuscaActionPerformed

    private void txtNumeroKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNumeroKeyPressed

    }//GEN-LAST:event_txtNumeroKeyPressed

    private void txtBuscaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtBuscaFocusLost
        if (txtBusca.getText().replace(" ", "").replace(".", "").replace("-", "").equals("")) {
            txtBusca.setFormatterFactory(new DefaultFormatterFactory());
            txtBusca.setText("Buscar...");
            txtBusca.setEditable(false);
        }
    }//GEN-LAST:event_txtBuscaFocusLost

    private void txtNumeroKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNumeroKeyTyped
        char c = evt.getKeyChar();
        if (((c < '0') || (c > '9')) && (c != KeyEvent.VK_BACK_SPACE)) {
            evt.consume();
        }
    }//GEN-LAST:event_txtNumeroKeyTyped

    private void txtBuscaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtBuscaFocusGained

        if (txtBusca.getText().replace(" ", "").contains("Buscar...") && TipoBuscaCliente.getSelection().getActionCommand().contains("BuscarNome")) {
            txtBusca.setFormatterFactory(new DefaultFormatterFactory());
            txtBusca.setText("");
            txtBusca.setEditable(true);
        } else if (txtBusca.getText().replace(" ", "").contains("Buscar...") && TipoBuscaCliente.getSelection().getActionCommand().contains("BuscarCPF")) {
            MaskFormatter formatter = null;
            try {
                formatter = new MaskFormatter("###.###.###-##");

            } catch (ParseException ex) {
                Logger.getLogger(ClienteView.class
                        .getName()).log(Level.SEVERE, null, ex);
            }
            txtBusca.setFormatterFactory(new DefaultFormatterFactory(formatter));
            txtBusca.setEditable(true);
        }
    }//GEN-LAST:event_txtBuscaFocusGained

    private void txtCPFClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCPFClienteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCPFClienteActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Botoes;
    private javax.swing.JRadioButton BuscarCPF;
    private javax.swing.JRadioButton BuscarNome;
    private javax.swing.JLabel CadastroCliente4;
    private javax.swing.JPanel Sexo;
    private javax.swing.JScrollPane Tabela;
    private javax.swing.ButtonGroup TipoBuscaCliente;
    private javax.swing.JButton btnAdicionarCliente;
    private javax.swing.JButton btnBuscarCliente;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnEditarCliente;
    private javax.swing.JButton btnExcluirCliente;
    private javax.swing.JButton btnSalvarCliente;
    private javax.swing.JComboBox<String> cmbEstadoCivil;
    private javax.swing.JComboBox<String> cmbSexo;
    private com.toedter.calendar.JDateChooser dateNascimento;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JLabel lblBairro;
    private javax.swing.JLabel lblCEP;
    private javax.swing.JLabel lblCPFCliente;
    private javax.swing.JLabel lblCidade;
    private javax.swing.JLabel lblClienteID;
    private javax.swing.JLabel lblDataNascimento;
    private javax.swing.JLabel lblEmailCliente;
    private javax.swing.JLabel lblEndereco;
    private javax.swing.JLabel lblEstadoCivil;
    private javax.swing.JLabel lblNacionalidade;
    private javax.swing.JLabel lblNomeCliente;
    private javax.swing.JLabel lblNumero;
    private javax.swing.JLabel lblSexo;
    private javax.swing.JLabel lblTelefone2;
    private javax.swing.JLabel lbltelefone1;
    private javax.swing.JTable tblCadastroCliente;
    private javax.swing.JTextField txtBairro;
    private javax.swing.JFormattedTextField txtBusca;
    private javax.swing.JFormattedTextField txtCEP;
    private javax.swing.JFormattedTextField txtCPFCliente;
    private javax.swing.JTextField txtCidade;
    private javax.swing.JTextField txtEmailCliente;
    private javax.swing.JTextField txtNacionalidade;
    private javax.swing.JTextField txtNomeCliente;
    private javax.swing.JTextField txtNumero;
    private javax.swing.JTextField txtRua;
    private javax.swing.JFormattedTextField txtTelefone1;
    private javax.swing.JFormattedTextField txtTelefone2;
    // End of variables declaration//GEN-END:variables
}
